<body>
  <style>
    @keyframes slideDown {
      from {
        transform: translateY(-100%);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    @keyframes slideOut {
      from {
        transform: translateY(0);
        opacity: 1;
      }
      to {
        transform: translateY(100%);
        opacity: 0;
      }
    }

    .countdown span.animated-out {
      animation: slideOut 0.5s ease forwards;
    }

    .countdown {
      display: inline-block;
      overflow: hidden;
      line-height: 1em;
      height: 1.2em; /* Adjust based on your font size */
    }

    .countdown span {
      display: inline-block;
      line-height: 1em;
      height: 1em;
    }

    .countdown span.animated {
      animation: slideDown 0.5s ease forwards;
    }
  </style>

  <div class="mb-5">
    <h1 class="text-4xl font-bold">State Countdown</h1>
  </div>
  <div class="grid grid-cols-2 md:grid-cols-4 gap-2 text-center">
    <div class="days flex flex-col p-2 border bg-gray-100 w-28 rounded-2xl">
      <span class="countdown text-5xl font-mono">
        <span>0</span>
      </span>
       days
    </div>
    <div class="hours flex flex-col p-2 border bg-gray-100 w-28 rounded-2xl">
      <span class="countdown text-5xl font-mono">
        <span>0</span>
      </span>
       hours
    </div>
    <div class="minutes flex flex-col p-2 border bg-gray-100 w-28 rounded-2xl">
      <span class="countdown text-5xl font-mono">
        <span class="number">0</span>
      </span>
       min
    </div>
    <div class="seconds flex flex-col p-2 border bg-gray-100 w-28 rounded-2xl">
      <span class="countdown text-5xl font-mono">
        <span>0</span>
      </span>
       sec
    </div>
  </div>

  <script>
    const initiateCountdown = () => {
      const targetDate = new Date("January 30, 2024 23:59:59");
      const daysSpan = document.querySelector(".days .countdown span");
      const hoursSpan = document.querySelector(".hours .countdown span");
      const minutesSpan = document.querySelector(".minutes .countdown span");
      const secondsSpan = document.querySelector(".seconds .countdown span");
      function applyAnimation(element, value) {
        if (element) {
          // Check if the element exists
          if (element.textContent !== value.toString()) {
            element.textContent = value;
            element.classList.add("animated");
            setTimeout(() => {
              element.classList.remove("animated");
            }, 500);
          }
        }
      }

      function updateCountdown() {
        const now = new Date();
        const timeDifference = targetDate - now;

        if (timeDifference <= 0) {
          clearInterval(interval);
          return;
        }

        const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
        const hours = Math.floor(
          (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
        );
        const minutes = Math.floor(
          (timeDifference % (1000 * 60 * 60)) / (1000 * 60)
        );
        const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);

        applyAnimation(daysSpan, days);
        applyAnimation(hoursSpan, hours);
        applyAnimation(minutesSpan, minutes);
        applyAnimation(secondsSpan, seconds);
      }

      const interval = setInterval(updateCountdown, 1000);
      updateCountdown();
    };

    document.addEventListener("DOMContentLoaded", function () {
      initiateCountdown();
    });
  </script>
</body>
